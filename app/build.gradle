apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "com.my_mvp_retrofit_rxjava"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false

        }

        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //混淆
            minifyEnabled true
            //Zipalign优化,优化代码性能
            zipAlignEnabled true
            // 移除无用的resource文件

            shrinkResources false
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), "proguard-rules.pro"
//            android.applicationVariants.all {
//                variant ->
//                    variant.outputs.all {
//                        output -> outputFileName = new File(output.outputFile.parent, "mvp" + "_v" + defaultConfig.versionName + ".apk");
//
//                    }
//            }

//            android.applicationVariants.all { variant ->
//                def file = variant.outputFile
//                variant.outputFile = new File(file.parent, file.name.replace(".apk", "-" + defaultConfig.versionName + ".apk"))
//            }
//            android.applicationVariants.all {
//                variant ->
//                    variant.outputs.each {
//                        output -> output.outputFile = new File(output.outputFile.parent, "branches" + "_v" + defaultConfig.versionName + ".apk");
//
//                    }
//            }
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "${variant.name}-${variant.versionName}.apk"
                }
            }

        }
    }

    lintOptions {
        //checkReleaseBuilds就是在打包Release版本的时候进行检测，这里就直接关掉了
        checkReleaseBuilds false
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.0.1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2'

    implementation 'org.greenrobot:eventbus:3.0.0'

    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    compile 'com.amitshekhar.android:rx2-android-networking:1.0.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
}
